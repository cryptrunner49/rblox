# frozen_string_literal: true

require_relative '../lexical/token'

# stmt.rb - generated by GenerateAst

module Lox
  module Syntax
    class Stmt
      module Visitor
        def visit_expression_stmt(expr)
          raise NotImplementedError, 'Must implement visit_expression_stmt'
        end

        def visit_print_stmt(expr)
          raise NotImplementedError, 'Must implement visit_print_stmt'
        end
      end

      def accept(visitor)
        raise NotImplementedError, 'Subclasses must implement accept'
      end

      class Expression < Stmt
        # @expression : Expr
        attr_reader :expression

        def initialize(expression)
          @expression = expression
        end

        def accept(visitor)
          visitor.visit_expression_stmt(self)
        end
      end

      class Print < Stmt
        # @expression : Expr
        attr_reader :expression

        def initialize(expression)
          @expression = expression
        end

        def accept(visitor)
          visitor.visit_print_stmt(self)
        end
      end
    end
  end
end
